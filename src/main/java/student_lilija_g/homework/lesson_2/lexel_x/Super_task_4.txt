Найдите в интернете, что такое типизированные
и не типизированные языки программирования.
Каким языком является Java: тиризированным или не типизированным?

К типизированным языкам относятся:
Java, JavaScript
C/C++
Python, PHP, Ruby
Lua, Action Script

Не типизированные языки:
Ассемблер
Forth
Brainfuck
...

В свою очередь, типизированные языки разделяются еще на несколько пересекающихся категорий:
- Со статической или динамической типизацией.
- Со строгой или нестрогой типизацией.
- С явной или неявной типизацией.

При статической типизации финальные типы переменных и функций устанавливаются на этапе компиляции. Компилятор еще до запуска программы исправляет (точнее ругается на них, тыкая вас лицом в) ваши ошибки при несоответствии типов.
Представители: C/C++, C#, Java.

Языки с динамической типизацией
В динамической типизации все типы определяются уже во время выполнения программы. И если вы допустили ошибку, то узнаете об этом только при выполнении (или не узнаете, зависит от уровня реагирования на ошибки в конфигурации вашего компилятора/интепретатора). Поэтому при динамической типизации очень важно уделять особое внимание проверкам и перехвату ошибок.
Представители: JavaScript, PHP, Python, Ruby…

Строгая типизация (сильная)
Языки со строгой типизацией не позволяют смешивать в выражениях различные типы и не будут выполнять автоматически неявные преобразования типов. К примеру, нельзя вычесть из строки число или какой-то другой тип, не являющегося строкой.
Представители: Java, Python, Lisp…

Нестрогая типизация (слабая)
Языки с нестрогой типизацией выполняют множество неявных преобразований типов автоматически. Они делают это, даже если может произойти потеря точности или преобразование неоднозначно.
Представители: JavaScript, Visual Basic, PHP…

Явная типизация
В явно типизированных языках тип новых переменных, функций и аргументов нужно задавать явно.
Представители: C++, D, C#…

Неявная типизация
В языках с неявной типизацией задачу по указанию типов перекладывают на компилятор/интерпретатор.
Представители: JavaScript, PHP, Python…

C#, C++, Java, Go — статически типизированные языки.

Если в одном из этих языков создать число и попытаться проводить с ним операции, как с функцией,
то получим ошибку во время компиляции, а программа не станет запускаться — она даже не дойдёт до этой стадии,
потому что ошибка типизации будет обнаружена перед исполнением, в период компиляции.