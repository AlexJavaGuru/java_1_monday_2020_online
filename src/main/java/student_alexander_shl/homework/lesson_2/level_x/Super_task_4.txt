Найдите в интернете, что такое типизированные
и не типизированные языки программирования.
Каким языком является Java: тиризированным или не типизированным?

Ответ:

Нетипизированные языки:
Нетипизированные или бестиповые языки, как правило, это очень старые низкоуровневые языки, на которых
программы являются набором машинных команд и пишутся, в основном, для взаимодействия с железом.
Бестиповые языки позволяют производить любые операции над любыми данными, которые в них
представлены как цепочки бит произвольной длины.

Типизированные языки:
Типизированные языки сделали разработку программ более осмысленной и эффективной. Этот факт оказался
настолько весомым, что в основу всех современных языков легло такое фундаментальное понятие, как
система типов. По причине того, что авторы пытались решить разные задачи, создаваемые ими языки стали
различаться по типизации.


Типизированные языки делятся на:

- Статически*Динамически* типизированные:
К статически типизированным относятся такие языки, как C#, Java.
К динамически типизированным языкам относятся такие языки как PHP, Python, JavaScript.

Плюсы и минусы:
- В языках со статическим контролем типов связывание с типом данных происходит на этапе компиляции
(при объявлении) и остается неизменным.
- Программы со статическим контролем типов являются более производительными за счет того, что
львиная доля проверок приходится на этап компиляции.
- Статический контроль типов повышает семантику кода.
- За счет статического анализа кода редакторы делают разработку более эффективной.
- В языках с динамическим контролем типов связывание с типом данных происходит на этапе выполнения
программы (при операции присваивания значения) и может быть изменено.
- Программы с динамическим контролем типов за счет того, что проверки выполняются в момент выполнения
программы, менее производительны по сравнению с программами, имеющими статический контроль типов.
- Программы с динамическим контролем типов в большей мере подвержены трудновыявляемым ошибкам.
- Программы с динамическим контролем типов обладают слабой семантической выразительностью.
- Динамический контроль типов затрудняет редакторам кода осуществлять вывод вспомогательной
информации о коде.

- Сильно*Слабо* типизированные,
К сильно типизированным относятся такие языки, как C#, Java.
К слабо типизированным относятся такие языки как PHP, Python, JavaScript.

Плюсы и минусы:
Сильная типизация не позволяет выполнять выражения с различными типами и не преобразует неявно типы данных, которые нуждаются в явном преобразовании.
Слабая типизация, напротив, позволяет выражения с операциями над различными типами данных и выполняет неявные преобразования.

- Явно*Неявно* типизированные.
К языкам с явной типизацией относятся С++, С# и многие другие.
К языкам с неявной типизацией относятся такие языки, как JavaScript, PHP и другие.

Плюсы и минусы:
Явная типизация возлагает указания типов на разработчика, развивая у него навыки, требующиеся при проектировании программ, и делает код более читабельным.
Языки с явной типизацией за счет вывода типов имеют возможность указывать типы неявно.
Неявная типизация возлагает определение типа на компилятор или интерпретатор.


